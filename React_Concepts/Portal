**Portal** provides a way to render a child component into a DOM node that exists outside the parent component's hierarchy.
This allows you to break out of the standard DOM tree rendering structure, 
making it possible to render components into a different part of the DOM (e.g., modals, tooltips, or popups).

example: -
import React from 'react'
import { useState } from 'react';
import ReactDOM from 'react-dom';

const Modal = ({onClose}) =>{
  return ReactDOM.createPortal(
    <>
      <h1>Modal</h1>
      <button onClick={onClose}>Close</button>
    </>,
    document.body
  )
}


const App = () => {
  const [isModalOpen, setIsModalOpen] = useState(false);

  return (
    <div>
      <h1>Portal</h1>
      {isModalOpen && <Modal onClose={() => setIsModalOpen(false)}/>}
      <button onClick={() => setIsModalOpen(true)}>Open Portal</button>
    </div>
  )
}

export default App
