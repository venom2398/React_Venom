To explain APIs and RESTful APIs in the simplest way:

**API (Application Programming Interface)**: Think of an API as a "messenger" that allows two applications to talk to each other. 
It's like a waiter in a restaurant—when you place an order (like requesting data), the waiter takes your order to the kitchen (server) and brings back the food (data) to you.
In tech terms, an API allows different software systems to communicate and share data, even if they’re built in different languages or platforms.

**RESTful API**: REST (Representational State Transfer) is a set of guidelines or rules for building APIs that are easy to use and follow. 
When an API follows REST guidelines, it's called a RESTful API. 
RESTful APIs organize data into resources and use simple HTTP methods like GET (to fetch data), POST (to send data), PUT (to update data), and DELETE (to remove data). 
This makes data exchange between systems more efficient and standardized, like having a well-organized menu in a restaurant where you know exactly what you’ll get when you place an order.


import axios from 'axios';
import React, { useState } from 'react';

const App = () => {
  const [data, setData] = useState(null);
  const [error, setError] = useState(null);

  const fetchData = async () => {
    try {
      const response = await axios.get('https://jsonplaceholder.typicode.com/users');
      setData(response.data);
    } catch (error) {
      setError(error.message);
    }
  };

  const postData = async () => {
    try {
      const response = await axios.post('https://jsonplaceholder.typicode.com/users', {
        name: 'John Doe',
        email: 'john.doe@example.com'
      });
      setData(response.data);
    } catch (error) {
      setError(error.message);
    }
  };

  const updateData = async () => {
    try {
      const response = await axios.put('https://jsonplaceholder.typicode.com/users/1', {
        name: 'John Doe Updated'
      });
      setData(response.data);
    } catch (error) {
      setError(error.message);
    }
  };

  const deleteData = async () => {
    try {
      await axios.delete('https://jsonplaceholder.typicode.com/users/1');
      setData(null);
    } catch (error) {
      setError(error.message);
    }
  };

  return (
    <div>
      <button onClick={fetchData}>Fetch Data</button>
      <button onClick={postData}>Post Data</button>
      <button onClick={updateData}>Update Data</button>
      <button onClick={deleteData}>Delete Data</button>
      {data && <pre>{JSON.stringify(data, null, 2)}</pre>}
      {error && <p style={{ color: 'red' }}>{error}</p>}
    </div>
  );
};

export default App;
